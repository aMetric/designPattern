# 测试配置文件
server:
  port: 8888
  servlet:
    context-path: /api
spring:
  datasource:
    url: jdbc:h2:mem:design
    driver-class-name: org.h2.Driver
    username: design
    password: design
    # 初始化表结构
    schema:
      classpath: classpath:schema.sql
    # 初始化数据
    data:
      classpath: classpath:data.sql
  redis:
    host: localhost
    port: 6379
    password: 123456
  h2:
    console:
      #数据库开启console
      enabled: true
      #通过访问/myH2访问数据库可视化界面
      path: /myH2
  jpa:
    properties:
      hibernate:
        hbm2ddl:
          #自动更新ddl
          auto: update
        dialect: org.hibernate.dialect.H2Dialect
    # 控制台打印sql语句
    show-sql: true
    hibernate:
      ddl-auto: none
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

#server:
#  address: 0.0.0.0
#  port: 8101
#  servlet:
#    context-path: /api
#    # cookie 30 天过期
#    session:
#      cookie:
#        max-age: 2592000
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
# 微信相关
wx:
  # 微信公众平台
  # todo 需替换配置
  mp:
    token: xxx
    aesKey: xxx
    appId: xxx
    secret: xxx
    config-storage:
      http-client-type: HttpClient
      key-prefix: wx
      redis:
        host: 127.0.0.1
        port: 6379
      type: Memory
  # 微信开放平台
  # todo 需替换配置
  open:
    appId: xxx
    appSecret: xxx
# 对象存储
# todo 需替换配置
cos:
  client:
    accessKey: xxx
    secretKey: xxx
    region: xxx
    bucket: xxx
# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.coderwhs.designPattern.controller

gitee:
  clientId: 0247f2bbda10a6831e9759b4497b5ba22250de77b46666576f4286b556f5e9fd
  clientSecret: a223408e48ae8a89f1250594f96b09a94fb121abfe2aefe1eb43491e2e301583
  callBack: http://localhost:8888/api/bridge/gitee
  state: GITEE
  user:
    prefix: ${gitee.state}@
    url: https://gitee.com/api/v5/user?access_token=
  token:
    url: https://gitee.com/oauth/token?grant_type=authorization_code&client_id=${gitee.clientId}&client_secret=${gitee.clientSecret}&redirect_uri=${gitee.callBack}&code=

#apollo
app:
  id: designPatternLearning
apollo:
  meta: http://127.0.0.1:8080
  bootstrap:
    enabled: true
    eagerLoad:
      enabled: true
  cacheDir: E:\code\cache\data\apollo-cache
logging:
  level:
    com: info
